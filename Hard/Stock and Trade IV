class Solution {
public:
     int f(int idx,int buy,int cap,vector<int>& values,int n,vector<vector<vector<int>>>&dp)
         
{
    if(idx==n||cap==0) return 0;
        //if(cap==2) return 0;
    if(dp[idx][buy][cap]!=-1) return dp[idx][buy][cap];
    int profit=0;
    if(buy)
        return dp[idx][buy][cap]=max(-values[idx]+f(idx+1,0,cap,values,n,dp),f(idx+1,1,cap,values,n,dp));
    else
        return dp[idx][buy][cap]=max(values[idx]+f(idx+1,1,cap-1,values,n,dp),f(idx+1,0,cap,values,n,dp));
    //return dp[idx][buy][cap]=profit;
}
    
    int maxProfit(int k, vector<int>& prices) {
        int n=prices.size();
        vector<vector<vector<int>>>dp(n,vector<vector<int>>(2,vector<int>(k+1,-1)));
    return f(0,1,k,prices,n,dp);
    }
};


